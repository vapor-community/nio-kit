name: Test Matrix
on:
  pull_request: 
  push: { branches: [ master ] }
jobs:
  tests-linux:
    strategy:
      matrix:
        runner: ['swift:5.2-xenial', 'swift:5.2-bionic',
                 'swiftlang/swift:nightly-5.2-xenial', 'swiftlang/swift:nightly-5.2-bionic',
                 'swiftlang/swift:nightly-5.3-xenial', 'swiftlang/swift:nightly-5.3-bionic',
                 'swiftlang/swift:nightly-master-xenial', 'swiftlang/swift:nightly-master-bionic',
                 'swiftlang/swift:nightly-master-focal',
                 'swiftlang/swift:nightly-master-centos8', 'swiftlang/swift:nightly-master-amazonlinux2']
        include:
          - installcmd: 'apt-get -q update && apt-get -q install -y curl'
          - { 'runner': 'swiftlang/swift:nightly-master-centos8', 'installcmd': 'true' }
          - { 'runner': 'swiftlang/swift:nightly-master-amazonlinux2', 'installcmd': 'true' }
    container: ${{ matrix.runner }}
    env:
      SWIFT_RUNNER: ${{ matrix.runner }}
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: ${{ matrix.installcmd }}
      - name: Check out code
        uses: actions/checkout@v2
      - name: Run tests with Thread Sanitizer and code coverage
        run: swift test --enable-test-discovery --sanitize=thread --enable-code-coverage
      - name: Convert data to LCOV format and save location
        run: |
          export b=$(swift build --show-bin-path) && llvm-cov export -format lcov \
            -instr-profile=$b/codecov/default.profdata --ignore-filename-regex='\.build/' \
            $b/async-kitPackageTests.xctest >$(swift test --show-codecov-path).lcov
          echo "::set-env name=CODECOV_FILE::$(swift test --show-codecov-path).lcov"
      - name: Send to codecov.io
        uses: codecov/codecov-action@v1.0.7
        with:
          file: ${{ env.CODECOV_FILE }}
          flags: unittests
          env_vars: SWIFT_RUNNER
          fail_ci_if_error: true
  tests-macos:
    runs-on: macos-latest
    env:
      SWIFT_RUNNER: 'macOS'
    steps:
      - name: Select latest available Xcode
        uses: maxim-lobanov/setup-xcode@1.0
        with: { 'xcode-version': 'latest' }
      - name: Check out code
        uses: actions/checkout@v2
      - name: Run tests with Thread Sanitizer
        run: swift test --enable-test-discovery --sanitize=thread --enable-code-coverage
      - name: Convert data to LCOV format and save location
         run: |
           export b=$(swift build --show-bin-path) && xcrun llvm-cov export -format lcov \
            -instr-profile=$b/codecov/default.profdata --ignore-filename-regex='\.build/' \
            $b/async-kitPackageTests.xctest >$(swift test --show-codecov-path).lcov
          echo "::set-env name=CODECOV_FILE::$(swift test --show-codecov-path).lcov"
      - name: Send to codecov.io
         uses: codecov/codecov-action@v1.0.7
         with:
           file: ${{ env.CODECOV_FILE }}
           flags: unittests
           env_vars: SWIFT_RUNNER
           fail_ci_if_error: true
