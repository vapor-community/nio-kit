name: test
on: { pull_request: {} }

jobs:
  getcidata:
    runs-on: ubuntu-latest
    outputs:
      environments: ${{ steps.output.outputs.environments }}
    steps:
      - id: output
        run: |
          envblob="$(curl -fsSL https://raw.githubusercontent.com/vapor/ci/main/pr-environments.json | jq -cMj '.')"
          echo "::set-output name=environments::${envblob}"

  test-asynckit:
    needs: getcidata
    strategy:
      fail-fast: false
      matrix:
        env: ${{ fromJSON(needs.getcidata.outputs.environments) }}
    runs-on: ${{ matrix.env.os }}
    container: ${{ matrix.env.image }}
    env:
      SWIFT_RUNNER: ${{ format('{0}-{1}-{2}', matrix.env.os, matrix.env.toolchain, matrix.env.image) }}
    steps: 
      - name: Select toolchain
        uses: maxim-lobanov/setup-xcode@v1.2.1
        with:
          xcode-version: ${{ matrix.env.toolchain }}
        if: ${{ matrix.env.toolchain != '' }}
      - name: Ensure curl's availability
        run: apt-get update && apt-get install -y curl
        if: ${{ matrix.env.image != '' }}
      - name: Check out code
        uses: actions/checkout@v2
      - name: Run tests with Thread Sanitizer
        timeout-minutes: 20
        run: swift test --enable-test-discovery --sanitize=thread --enable-code-coverage
      - name: Convert data to LCOV format and save location
        run: |
          export build=$(swift build --show-bin-path) && \
          export subpath="$([[ $(uname -s) == "Darwin" ]] && echo "/Contents/MacOS/async-kitPackageTests" || true)" && \
          export exc_prefix="$([[ $(uname -s) == "Darwin" ]] && echo "xcrun" || true)" && \
          ${exc_prefix} llvm-cov export \
              -format lcov \
              -instr-profile=$build/codecov/default.profdata \
              --ignore-filename-regex='\.build/' \
              $build/async-kitPackageTests.xctest$subpath \
              >$(swift test --show-codecov-path).lcov
          echo "CODECOV_FILE=$(swift test --show-codecov-path).lcov" >> $GITHUB_ENV
        shell: bash
      - name: Send to codecov.io
        uses: codecov/codecov-action@v1.0.14
        with:
          file: ${{ env.CODECOV_FILE }}
          flags: unittests
          env_vars: SWIFT_RUNNER
          fail_ci_if_error: true
